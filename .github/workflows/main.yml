name: Main Branch

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      deployments: write
    environment:
      name: prod
      url: https://${{ vars.APP_DOMAIN }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push production image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/threads-bot-api:latest
            ghcr.io/${{ github.repository }}/threads-bot-api:${{ github.sha }}

      - name: Deploy to production
        uses: appleboy/ssh-action@v1.0.0
        env:
          DEPLOY_IMAGE: ghcr.io/${{ github.repository }}/threads-bot-api:${{ github.sha }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 391
          envs: DEPLOY_IMAGE,GITHUB_REPOSITORY
          debug: true
          script: |
            echo "Starting deployment..."
            echo "Pulling image: $DEPLOY_IMAGE"
            docker pull "$DEPLOY_IMAGE"
            docker compose down
            IMAGE_TAG=${{ github.sha }} docker compose up -d
            echo "Waiting for container to be healthy..."
            timeout 30s bash -c 'until docker compose ps | grep -q "(healthy)"; do sleep 1; done'
            echo "Deployment complete"

      - name: Create smoke test script
        run: |
          mkdir -p scripts
          cat > scripts/smoke-test.sh << 'EOF'
          #!/bin/bash
          set -e
          
          url=""
          while [[ $# -gt 0 ]]; do
            case $1 in
              --url)
                url="$2"
                shift 2
                ;;
              *)
                echo "Unknown option: $1"
                exit 1
                ;;
            esac
          done
          
          if [ -z "$url" ]; then
            echo "Error: --url parameter is required"
            exit 1
          fi
          
          echo "Testing $url..."
          curl -sSf -k "$url/health" || (echo "Health check failed"; exit 1)
          echo "Smoke test passed!"
          EOF
          chmod +x scripts/smoke-test.sh

      - name: Smoke test
        run: |
          sleep 10  # Give the container time to start
          ./scripts/smoke-test.sh --url "https://${{ vars.APP_DOMAIN }}"

      - name: Rollback on failure
        if: failure()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 391
          script: |
            docker compose down
            IMAGE_TAG=latest docker compose up -d